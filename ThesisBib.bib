
@book{abelson_structure_1999,
	address = {London, UK, UK},
	edition = {Second},
	title = {Structure and {Interpretation} of {Computer} {Programs}},
	isbn = {0-07-000484-6},
	language = {English},
	urldate = {2017-05-26},
	publisher = {McGraw-Hill Book Company},
	author = {Abelson, Harold and Sussman, Gerald Jay and Sussman, Julie},
	year = {1999}
}

@inproceedings{cooper_embedding_2006,
	title = {Embedding {Dynamic} {Dataflow} in a {Call}-by-{Value} {Language}},
	doi = {10.1007/11693024_20},
	abstract = {This paper describes FrTime, an extension of Scheme designed for writing interactive applications. Inspired by functional reactive programming, the language embeds dynamic dataflow within a call-by-value functional language. The essence of the embedding is to make program expressions evaluate to nodes in a dataflow graph. This strategy eases importation of legacy code and permits incremental program construction. We have integrated FrTime with the DrScheme programming environment and have used it to develop several novel applications. We describe FrTimeâ€™s design and implementation in detail and present a formal semantics of its evaluation model.},
	language = {en},
	booktitle = {Programming {Languages} and {Systems}},
	publisher = {Springer, Berlin, Heidelberg},
	author = {Cooper, Gregory H. and Krishnamurthi, Shriram},
	month = mar,
	year = {2006},
	pages = {294--308},
	file = {Full Text PDF:C\:\\Users\\alexa\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8oufbymn.default\\zotero\\storage\\9Q4DTSA2\\Cooper and Krishnamurthi - 2006 - Embedding Dynamic Dataflow in a Call-by-Value Lang.pdf:application/pdf;Snapshot:C\:\\Users\\alexa\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8oufbymn.default\\zotero\\storage\\DRWU2CTA\\11693024_20.html:text/html}
}

@article{jennifer_extensible_2017,
	title = {An {Extensible} {Virtual} {Machine} {Design} for the {Execution} of {High}-level {Languages} on {Tagged}-token {Dataflow} {Machines}},
	author = {Jennifer, Mathijs Saey Joeri De Koster and De Meuter, B Sartor Wolfgang},
	year = {2017}
}

@misc{noauthor_observable_2017,
	title = {Observable {\textbar} {RxJS} {API} {Document}},
	url = {http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html},
	urldate = {2017-06-01},
	month = jun,
	year = {2017},
	file = {Observable | RxJS API Document:C\:\\Users\\alexa\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8oufbymn.default\\zotero\\storage\\SW3SET38\\Observable.js~Observable.html:text/html}
}

@misc{czaplicki_elm:_2012,
	title = {Elm: {Concurrent} {FRP} for functional {GUIs}},
	author = {Czaplicki, Evan},
	year = {2012},
	file = {:C\:\\Users\\alexa\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8oufbymn.default\\zotero\\storage\\FV4T9JDK\\Czaplicki.html:text/html}
}

@inproceedings{burchett_lowering:_2007,
	address = {New York, NY, USA},
	series = {{PEPM} '07},
	title = {Lowering: {A} {Static} {Optimization} {Technique} for {Transparent} {Functional} {Reactivity}},
	isbn = {978-1-59593-620-2},
	shorttitle = {Lowering},
	doi = {10.1145/1244381.1244393},
	abstract = {Functional Reactive Programming (FRP) extends traditional functional programming with dataflow evaluation, making it possible to write interactive programs in a declarative style. An FRP language creates a dynamic graph of data dependencies and reacts to changes by propagating updates through the graph. In a transparent FRP language, the primitive operators are implicitly lifted, so they construct graph nodes when they are applied to time-varying values. This model has some attractive properties, but it tends to produce a large graph that is costly to maintain. In this paper, we develop a transformation we call lowering, which improves performance by reducing the size of the graph. We present a static analysis that guides the sound application of this optimization, and we present benchmark results that demonstrate dramatic improvements in both speed and memory usage for real programs.},
	booktitle = {Proceedings of the 2007 {ACM} {SIGPLAN} {Symposium} on {Partial} {Evaluation} and {Semantics}-based {Program} {Manipulation}},
	publisher = {ACM},
	author = {Burchett, Kimberley and Cooper, Gregory H. and Krishnamurthi, Shriram},
	year = {2007},
	keywords = {frp, FrTime, functional programming, lifting, lowering, optimization, reactive programming, scheme, static analysis},
	pages = {71--80},
	file = {paper.pdf:C\:\\Users\\alexa\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\8oufbymn.default\\zotero\\storage\\UQRI8V2H\\paper.pdf:application/pdf}
}